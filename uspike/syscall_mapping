#!/usr/bin/env python
#
#  Copyright (c) 2020 Peter Hsu.  All Rights Reserved.  See LICENCE file for details.
#

import re
import sys
import subprocess

list = subprocess.run(["ausyscall", "--dump"], capture_output=True, text=True).stdout
list = "".join(list)
list = list.split('\n')
x86 = {}
x86_highest = -1
for line in list[1:]:
    if not line:
        continue
    (number, name) = line.split()
    number = int(number)
    x86[name] = number
    if number > x86_highest:
        x86_highest = number
riscv = {}
riscv_highest = -1
for line in sys.stdin:
    tuple = line.split()
    if len(tuple) != 2:
        continue
    (name, number) = tuple
    number = int(number)
    riscv[name] = number
    if number > riscv_highest:
        riscv_highest = number

map = [(-1, '0')]*(riscv_highest+1)
for name in riscv:
    number = riscv[name]
    if name in x86:
        map[number] = (x86[name], '"SYS_'+name+'"')
    else:
        map[number] = (-2, '0')

for i in range(riscv_highest+1):
    (number, name) = map[i]
    print('  /* {:d} */ {{ {:d}, {:s} }},'.format(i, number, name))
print('#define HIGHEST_ECALL_NUM  {:d}'.format(riscv_highest))

