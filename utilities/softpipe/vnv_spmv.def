/*
 *  Vector-no-Vector implementation of SPMV.
 *  (c) 2020 Peter Hsu
 */

//#define CAREFULLY

#ifndef SPMV_OP
#error Define SPMV_OP as += or -= then follow with subroutine header:
#error static inline double vnv_spmv_plus( long nnz, const int* c, const double* v, const double* x, double ac)
#error static inline double vnv_spmv_minus(long nnz, const int* c, const double* v, const double* x, double ac)
#endif

{
#ifdef CAREFULLY
  double sum = ac;
  long count = nnz;
#endif
  const int *cp = c;
  const double *vp = v;
  
${ nnz
$	int    c$;
$	double v$;
$	double x$;
0	c$ = *cp++;
3	v$ = *vp++;
3	x$ = x[c$];
6	ac SPMV_OP v$*x$;
$}

#ifdef CAREFULLY

#define MISTAKES  10
#define Q(x)  #x
#define QUOTE(x) Q(x)

  {
    for (int k=0; k<count; k++)
      sum SPMV_OP v[k]*x[c[k]];
    if (sum != ac)
      abort();
  }
#endif
  return ac;
}
